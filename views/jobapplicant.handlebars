<!-- Import your client side script here -->
<script src="/public/js/jobApplicant.js"></script>

<div class="mb-3">
  <button class="btn btn-warning rounded-pill" onclick="history.back()">Go Back</button>
</div>

<h1>Job Applicant Details</h1>

<h2>Applicant for Job: {{job.title}}</h2>

<h3>{{applicant.firstName}} {{applicant.lastName}}</h3>
<br>
Email: {{applicant.emailAddress}}
<br>
Age: {{applicant.birthDate}}
<br>
State: {{applicant.state}}
<br>
Graduation Year: {{applicant.gradYr}}
<br>
Resume: 

{{!-- Create an iframe to show the PDF --}}
<iframe id="pdf-iframe" width="100%" height="500" frameborder="0"></iframe>
{{!-- {{applicant.resume}} --}}
<form action="/jobApplicant" method="POST">
  <label for="statusInput">Application Status:</label>
  <select id="statusInput" name="statusInput">
    {{#select status}}
      <option value="New">New</option>
      <option value="Reviewing">Reviewing</option>
      <option value="Contacted">Contacted</option>
      <option value="Interviewed">Interviewed</option>
      <option value="Rejected">Rejected</option>
      <option value="Finalist">Finalist</option>
      <option value="Offer Made">Offer Made</option>
      <option value="Accepted">Accepted</option>
    {{/select}}
  </select>
  <br>
  <label class="form-label" for="notesInput">Notes:</label>
  <input
    class="form-control"
    type="text"
    id="notesInput"
    name="notesInput"
    value="{{notes}}"
  >
  <input type="hidden" id="superid" name="superid" value="{{superid}}">
  <input type="submit" value="Update">
</form>

{{!-- <script>
function b64toBlob(dataURI) {
  const splitIndex = dataURI.indexOf(',') + 1;
  const base64 = dataURI.substr(splitIndex);
  console.log('dataURI:', dataURI);
  console.log('base64:', base64);
  const binary = atob(base64);
  const array = [];
  for (let i = 0; i < binary.length; i++) {
    array.push(binary.charCodeAt(i));
  }
  const mime = dataURI.substr(0, splitIndex - 1);
  console.log('mime:', mime);
  const blob = new Blob([new Uint8Array(array)], { type: mime });
  return blob;
}



// Get the iframe element
const pdfIframe = document.getElementById('pdf-iframe');

// Get the base64 encoded PDF data
const pdfData = '{{applicant.resume}}';
// Convert base64 to blob
const pdfBlob = b64toBlob(pdfData.split(',')[0], 'application/pdf');

// Create a URL for the blob object
const pdfUrl = URL.createObjectURL(pdfBlob);

// Set the iframe source to the PDF URL
pdfIframe.src = pdfUrl;
</script> --}}

<script>
function b64toBlob(dataURI) {
      const byteString = window.atob(dataURI);
      const arrayBuffer = new ArrayBuffer(byteString.length);
      const int8Array = new Uint8Array(arrayBuffer);
      for (let i = 0; i < byteString.length; i++) {
        int8Array[i] = byteString.charCodeAt(i);
      }
      const blob = new Blob([int8Array], { type: 'application/pdf'});
      return blob;
}

const pdfIframe = document.getElementById('pdf-iframe');
const pdfData = '{{applicant.resume}}';
const pdfBlob = b64toBlob(pdfData);
const pdfUrl = URL.createObjectURL(pdfBlob);
pdfIframe.src = pdfUrl;
</script>


